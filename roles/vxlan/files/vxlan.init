#!/bin/sh
# vxlan         vxlan init configuration
# chkconfig:    2345 40 80
# version:      0.1
# author:       knopp

#mkdir /etc/vxlan
#cp ./vxlan.service /etc/systemd/system/vxlan.service
#cp ./vxlan.init /usr/local/bin/vxlan.init
#chmod 0700 /usr/local/bin/vxlan.init
#systemctl enable vxlan.service
#systemctl start vxlan.service


#VCONF samble
#vInterface = vxlan10
#Id = 10
#Ether = eth0
#List = /etc/vxlan/all.ip
#Address = 192.168.0.11/24

VCONF=/etc/vxlan
LOG=/var/log/vxlan
ipcmd=/sbin/ip
bridgecmd=/sbin/bridge
pythoncmd=/usr/bin/python
# Check the configuration directory                                                                                      
if [ ! -d $VCONF ]; then
    date >>$LOG
    echo "**vxlan: configuration directory ($VCONF) not found!" >>$LOG
    exit                                                                   
fi


getvxlanconf()
{
  vdev="$(grep -i -e '^[[:space:]]*vInterface' $conf | sed 's/[[:space:]]//g; s/^.*=//g')"
  id="$(grep -i -e '^[[:space:]]*Id' $conf | sed 's/[[:space:]]//g; s/^.*=//g')"
  rdev="$(grep -i -e '^[[:space:]]*Ether' $conf | sed 's/[[:space:]]//g; s/^.*=//g')"
  addr="$(grep -i -e '^[[:space:]]*Address' $conf | sed 's/[[:space:]]//g; s/^.*=//g')"
  iplist="$(grep -i -e '^[[:space:]]*List' $conf | sed 's/[[:space:]]//g; s/^.*=//g')"
  #get myip 
  myip=`$ipcmd addr show $rdev | grep 'inet ' | awk -F '[/ ]' '{print $6}'` 
  #get broadcast addr 
  eval `ipcalc -s -b $addr`
}

init_vxlan(){
  [ -n "$vdev" ] && \
  [ -n "$id" ]   && \
  [ -n "$rdev" ] && \
  [ -n "$addr" ] && \
  [ -n "$BROADCAST" ] && \
  { 
  	for i in `seq 1 10`;
	do
		[ $($ipcmd addr show | grep $addr | wc -l ) -gt 0 ] && break
    		exe_log "$ipcmd link add $vdev type vxlan id $id dev $rdev" 
    		exe_log "$ipcmd addr add $addr broadcast $BROADCAST dev $vdev" 
    		exe_log "$ipcmd link set $vdev up"
		sleep 1s
	done
  }
}

stop_vxlan(){
  [ -n "$vdev" ] && \
  [ -n "$id" ]   && \
  [ -n "$rdev" ] && \
  [ -n "$addr" ] && \
  [ -n "$BROADCAST" ] && \
  { 
    exe_log "$ipcmd link del $vdev" 
  }
}

fdb_append(){
  [ -n "$iplist" ] && \
  [ -f $iplist ] && \
  { 
    for ip in  `cat $iplist`
    do
    		ipcalc -c $ip >/dev/null 2>&1
    		if [ $? -ne 0 ]; then
						ip=`$pythoncmd -c "import socket;import sys; 
print socket.gethostbyname('$ip')"`
						ipcalc -c $ip >/dev/null 2>&1
						if [ $? -ne 0 ]; then
							continue
						fi	
						
     fi

					[ $($bridgecmd fdb show dev $vdev | grep "$ip self permanent" | wc -l ) -gt 0 ] && continue

     if [ "$ip" != "$myip" ]; then
						exe_log "$bridgecmd fdb append 00:00:00:00:00:00 dev $vdev dst $ip" 
     fi
    done
  }
}

exe_log(){
         echo "" >>$LOG
	 date >>$LOG
         echo $1 >>$LOG
         $1 >>$LOG 2>&1
}


vxlan_start(){
	while true;
	do
		for conf in $VCONF/*.conf 
		do
			getvxlanconf
			init_vxlan
			fdb_append
		done	
		sleep 10s
	done
	
	touch /var/lock/subsys/vxlan
}

vxlan_stop(){
	for conf in $VCONF/*.conf 
	do
		getvxlanconf
		stop_vxlan
	done
	rm -f /var/lock/subsys/vxlan
}

case "$1" in
  start)
    vxlan_start
    ;;
  stop)
    vxlan_stop
    ;;
  restart)
    vxlan_stop
    vxlan_start
    ;;
  reload)
    for conf in $VCONF/*.conf 
    do
      getvxlanconf
      fdb_append
    done
    touch f /var/lock/subsys/vxlan
    ;;
esac
