---
  - name: "disable fastestmirror"
    become: yes
    shell: sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    ignore_errors: true
    tags:
      - jdbcrunner
      
  - name: "yum clean all"
    become: yes
    shell: yum -y clean all
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    ignore_errors: true
    tags:
      - jdbcrunner

  - name: "dummy yum command (GPGKEY INSTALL)"
    become: yes
    shell: yum -y search nfs-utils
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    ignore_errors: true
    tags:
      - jdbcrunner
      

  - name: "install jdbcrunner dependency library"
    become: yes
    yum: name="{{ item }}" state=present
    with_items:
      - git
#      - java-1.7.0-openjdk-devel
      - ant
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "create user"
    become: yes
    become_user: oracle
    script: createuser.sh "{{ SIDNAME }}1"
    when: inventory_hostname == groups["dbserver"][0]
    register: createuser_result
    tags:
      - jdbcrunner   

  - debug: var=createuser_result.stdout_lines
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - jdbcrunner
      
  - name:
    git:
      repo: https://github.com/sh2/jdbcrunner.git
      dest: "~/jdbcrunner"
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "unzip cvuqdisk"
    local_action: shell {{ UNZIP }} /media/{{ GRID_MEDIA1 }} {{ CVUQDISK }}
    args:
      creates: "/tmp/{{ CVUQDISK }}"
      executable: /bin/bash
      chdir: /tmp
    run_once: true
    when: MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - preinstallpackages
      
  - name: "copy cvuqdisk"
    become: yes
    copy: src="/tmp/{{ CVUQDISK }}" dest=/tmp/cvuqdisk.rpm
    when: MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - preinstallpackages


  - name: "copy media"
    copy: src="/media/{{ item }}" dest="~/jdbcrunner/lib/{{ item }}"
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    with_items:
      - ojdbc7.jar
    tags:
      - jdbcrunner
      

  - name: ant
    shell: /usr/bin/ant && touch ant.txt
    args:
      chdir: "~/jdbcrunner"
      creates: ant.txt
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: load tpcc data
#    shell: "{{ ORA_ORACLE_HOME }}/jdk/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3-nojdbc.jar:lib/*:{{ ORA_ORACLE_HOME }}/jdbc/lib/* JR scripts/tpcc_load.js -jdbcDriver oracle.jdbc.driver.OracleDriver -jdbcUrl jdbc:oracle:thin:@{{ hostvars[groups['dbserver'][0]]['ansible_vxlan0']['ipv4']['address'] }}:1521:{{ SIDNAME }}1"
    shell: "/usr/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3-nojdbc.jar:lib/ojdbc7.jar JR scripts/tpcc_load.js -jdbcDriver oracle.jdbc.driver.OracleDriver -jdbcUrl jdbc:oracle:thin::@{{ SCAN_NAME }}:1521/{{ SIDNAME }}"
    args:
      chdir: "~/jdbcrunner"
    when: inventory_hostname == groups["client"][0]
    register: tpccload_result
    tags:
      - jdbcrunner

  - debug: var=tpccload_result.stdout_lines
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner

  - name: exec tpcc
    shell: "/usr/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3-nojdbc.jar:lib/ojdbc7.jar JR scripts/tpcc.js -jdbcDriver oracle.jdbc.driver.OracleDriver -jdbcUrl jdbc:oracle:thin:@{{ SCAN_NAME }}:1521/{{ SIDNAME }}"
    args:
      chdir: "~/jdbcrunner"
    when: inventory_hostname == groups["client"][0]
    register: tpcc_result
    tags:
      - jdbcrunner
      - tpcc_exec

  - debug: var=tpcc_result.stdout_lines
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - tpcc_exec
