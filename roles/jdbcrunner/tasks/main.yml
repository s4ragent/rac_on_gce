---
  - name: "set targe(HA)"
    set_fact:
      TARGET: "{{ SCAN_NAME }}"
    when: dbca != 'single'
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "set target(SINGLE)"
    set_fact:
      TARGET:  {{ hostvars[groups['dbserver'][0]]["ansible_" + VXLAN_DEV ].ipv4.address }}
    when: dbca == 'single'  
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "install jdbcrunner dependency library"
    become: yes
    dnf:
      name:
        - git
        - ant
      state: latest
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "create createuser.sh"
    become: yes
    become_user: oracle
    template: 
      src: createuser.sh.j2 
      dest: "~/createuser.sh"
      mode: 0755
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "createuser"
    become: yes
    become_user: oracle
    shell: bash -x ./createuser.sh createuser.txt
    args:
      chdir: "~/"
    when: inventory_hostname == groups["dbserver"][0]
    register: createuser_result
    tags:
      - jdbcrunner
      - installjdbcrunner

  - debug: var=createuser_result.stdout_lines
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner
      
  - name:
    git:
      repo: https://github.com/sh2/jdbcrunner.git
      dest: "~/jdbcrunner"
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner

  - name: "unzip jdbcdriver"
    local_action: shell {{ UNZIP }} /media/{{ GRID_MEDIA }} {{ JDBCDRIVER }}
    args:
      creates: "/tmp/{{ JDBCDRIVER }}"
      executable: /bin/bash
      chdir: /tmp
    run_once: true
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - jdbcrunner
      
  - name: "copy jdbcdriver"
    copy:
      src: "/tmp/{{ JDBCDRIVER }}"
      dest: "~/jdbcrunner/lib/ojdbc.jar"
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - jdbcrunner

  - name: ant
    shell: /usr/bin/ant && touch ant.txt
    args:
      chdir: "~/jdbcrunner"
      creates: ant.txt
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner

  - name: load tpcc data
    shell: "/usr/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3-nojdbc.jar:lib/ojdbc.jar JR scripts/tpcc_load.js -jdbcDriver oracle.jdbc.driver.OracleDriver -jdbcUrl jdbc:oracle:thin:@{{ TARGET }}:1521/{{ PDBNAME }} -jdbcUser {{ TPCCUSER }} -jdbcPass {{ TPCC_PASSWORD }}"
    args:
      chdir: "~/jdbcrunner"
    when: inventory_hostname == groups["client"][0]
    register: tpccload_result
    tags:
      - jdbcrunner
      - exectpcc

  - debug: var=tpccload_result.stdout_lines
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - exectpcc

  - name: exec tpcc
    shell: "/usr/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3-nojdbc.jar:lib/ojdbc.jar JR scripts/tpcc.js -jdbcDriver oracle.jdbc.driver.OracleDriver -jdbcUrl jdbc:oracle:thin:@{{ TARGET }}:1521/{{ PDBNAME }}  -jdbcUser {{ TPCCUSER }} -jdbcPass {{ TPCC_PASSWORD }}"
    args:
      chdir: "~/jdbcrunner"
    when: inventory_hostname == groups["client"][0]
    register: tpcc_result
    tags:
      - jdbcrunner
      - exectpcc

  - debug: var=tpcc_result.stdout_lines
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - exectpcc
