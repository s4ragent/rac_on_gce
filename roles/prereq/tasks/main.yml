---
  - name: "create group"
    become: yes
    group:
      name: "{{ item.name }}"
      gid: "{{ item.gid }}"
      state: present
    with_items:
      - { name: 'oinstall', gid: '601' }
      - { name: 'dba', gid: '602' }
      - { name: 'oper', gid: '603' }
      - { name: 'asmadmin', gid: '2001' }
      - { name: 'asmdba', gid: '2002' }
      - { name: 'asmoper', gid: '2003' }
    tags:
      - createuser
      - prereq

  - name: "delete user"
    become: yes
    user:
      name: "{{ item }}"
      state: absent
      remove: yes
    ignore_errors: true
    with_items:
      - oracle
      - grid
    tags:
      - createuser
      - prereq

  - name: "create user"
    become: yes
    user:
      name: "{{ item.name}}"
      uid: "{{ item.uid }}"
      group: oinstall
      groups: "{{ item.groups}}"
      shell: /bin/bash
    with_items:
      - { name: 'oracle', uid: '501',groups: 'dba,oper,asmdba' }
      - { name: 'grid', uid: '2001',groups: 'asmadmin,asmdba,asmoper' }
    tags:
      - createuser
      - prereq

  - name: "copy .bashrc"
    become: yes
    copy:
      src: .bashrc
      dest: "/home/{{ item }}/.bashrc"
      mode: 0644
      owner: "{{ item }}"
      group: oinstall 
    with_items:
      - oracle
      - grid
    tags:
      - profile
      - createuser
      - prereq

  - name: "copy .bash_profile"
    become: yes
    template:
      src: ".bash_profile_{{ item }}.j2"
      dest: "/home/{{ item }}/.bash_profile"
      mode: 0644
      owner: "{{ item }}"
      group: oinstall
    with_items:
      - oracle
      - grid
    tags:
      - profile
      - createuser
      - prereq
      
  - name: "create ssh key"
    local_action: shell ssh-keygen -t rsa -P "" -f id_rsa
    args:
      creates: id_rsa
    run_once: true
    tags:
      - sshkey
      - prereq
 
  - name: "copy authorized key"
    become: yes
    authorized_key:
      user: "{{ item }}"
      key: "{{ lookup('file', 'id_rsa.pub') }}" 
    with_items:
      - oracle
      - grid
    tags:
      - sshkey
      - prereq

  - name: "copy private key"
    become: yes
    copy:
      dest: "/home/{{ item }}/.ssh/id_rsa"
      mode: 0600
      owner: "{{ item }}"
      group: oinstall
      content: "{{ lookup('file', 'id_rsa') }}"
    with_items:
      - oracle
      - grid
    tags:
      - sshkey
      - prereq

  - name: "create ssh config"
    become: yes
    template:
      src: config.j2
      dest: "/home/{{ item }}/.ssh/config"
      owner: "{{ item }}"
      group: oinstall
      mode: 0600
    with_items:
      - oracle
      - grid
    when: SSHPORT is defined and SSHPORT !=""
    tags:
      - sshkey
      - prereq

  - name: "create known hosts"
    become: yes
    template:
      src=known_hosts.j2
      dest="/home/{{ item }}/.ssh/known_hosts"
      owner="{{ item }}"
      group=oinstall
      mode=0644
    with_items:
      - oracle
      - grid
    tags:
      - sshkey
      - prereq


  - name: "delete ssh key"
    local_action: shell rm -rf id_rsa*
    run_once: true
    tags:
      - sshkey
      - prereq

  - name: limit.conf
    become: yes
    pam_limits:
      domain: "{{item.user}}"
      limit_type: "{{item.limit_type}}"
      limit_item: "{{item.limit_item}}"
      value: "{{item.value}}"
    with_items:
      - { user: 'oracle', limit_type: 'soft', limit_item: 'nproc', value: 2047 }
      - { user: 'oracle', limit_type: 'hard', limit_item: 'nproc', value: 16384 }
      - { user: 'oracle', limit_type: 'soft', limit_item: 'nofile', value: 1024 }
      - { user: 'oracle', limit_type: 'hard', limit_item: 'nofile', value: 65536 }
      - { user: 'oracle', limit_type: 'soft', limit_item: 'stack', value: 10240 }
      - { user: 'oracle', limit_type: 'hard', limit_item: 'stack', value: 32768 }      
      - { user: 'grid', limit_type: 'soft', limit_item: 'nproc', value: 2047 }
      - { user: 'grid', limit_type: 'hard', limit_item: 'nproc', value: 16384 }
      - { user: 'grid', limit_type: 'soft', limit_item: 'nofile', value: 1024 }
      - { user: 'grid', limit_type: 'hard', limit_item: 'nofile', value: 65536 }
      - { user: 'grid', limit_type: 'soft', limit_item: 'stack', value: 10240 }
      - { user: 'grid', limit_type: 'hard', limit_item: 'stack', value: 32768 } 
    tags:
      - limits
      - prereq


  - name: /etc/pam.d/login
    pamd:
      name: login
      type: session
      control: required
      module_path: pam_limits.so
    tags:
      - limits
      - prereq
      
#https://github.com/oraclebase/vagrant/blob/master/rac/ol7_183/shared_scripts/configure_chrony.sh
  - name: chrony
    become: yes
    systemd:
      state: restarted
      enabled: yes
      name: chronyd
    tags:
      - chronyd
      - prereq

  - name: "chrocyc burst"
    become: yes
    shell: chronyc -a 'burst 4/4'
    tags:
      - chronyd
      - prereq

  - name: "chrocyc burst"
    become: yes
    shell: chronyc -a makestep
    tags:
      - chronyd
      - prereq

  - name: "Partition additional disks"
    become: yes
    parted:
      device: "{{ data_disk_dev }}"
      number: 1
      part_start: 1MiB
      label: gpt
      state: present
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome
      - fdisk
      - prereq

  - name: "fdisk data_disk_dev"
    become: yes
    filesystem:
      fstype: xfs
      dev: "{{ data_disk_dev }}1"
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome
      - fdisk
      - prereq

  - name: get blkid
    become: yes
    shell: '/sbin/blkid {{ data_disk_dev }}1 | awk -F''"'' ''{ print $2 }'' '
    register: uuid
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome
      - fdisk
      - blkid
      - prereq

  - debug: var=uuid.stdout
    tags:
      - oraclehome
      - fdisk
      - blkid
      - prereq

  - name: "create data_disk mountpoint"
    become: yes
    file:
      path: "{{ data_disk_mountpoint }}"
      state: directory
      owner: grid
      group: oinstall
      mode: 0755
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome
      - fdisk
      - blkid
      - prereq

  - name: "mount data_disk_dev"
    become: yes
    mount:
      name: "{{ data_disk_mountpoint }}"
      src: "UUID={{ uuid.stdout }}" 
      fstype: xfs 
      opts: defaults 
      passno: 0
      dump: 0
      state: mounted
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome
      - fdisk
      - blkid
      - prereq

  - name: "create gridbase gridhome oradata orainventry"
    become: yes
    file: path={{ item.path }} state=directory owner={{ item.name }} group=oinstall mode=0755
    with_items:
      - { name: 'grid', path: "{{ ORAINVENTORY }}" }
      - { name: 'grid', path: "{{ GRID_ORACLE_BASE }}" }
      - { name: 'grid', path: "{{ GRID_ORACLE_HOME }}" }
      - { name: 'oracle', path: "{{ ORA_ORACLE_BASE }}" }
      - { name: 'oracle', path: "{{ ORA_ORACLE_HOME }}" }
    tags:
      - oraclehome

  - name: "install packages"
    become: yes
    dnf:
      name:
        -  bc
        -  binutils
        -  elfutils-libelf
        -  elfutils-libelf-devel
        -  fontconfig-devel
        -  glibc
        -  glibc-devel
        -  ksh
        -  libaio
        -  libaio-devel
        -  libXrender
        -  libX11
        -  libXau
        -  libXi
        -  libXtst
        -  libgcc
        -  libnsl
        -  librdmacm
        -  libstdc++
        -  libstdc++-devel
        -  libxcb
        -  libibverbs
        -  make
        -  smartmontools
        -  sysstat 
        -  libnsl2
#        -  libnsl2-devel
        - unzip
      state: present
    tags:
      - preinstallpackages
      - prereq

  - name: "create swap(dd)"
    become: yes
    shell: dd if=/dev/zero of=/u01/swap bs=1M count={{ SWAP_SIZE }} && mkswap /u01/swap
    async: "{{ ASYNC }}"
    poll: "{{ POLL }}"
    when: ansible_swaptotal_mb < SWAP_SIZE -1
    tags:
      - ddswap
      - swap
      - prereq
      
  - name: "create swap(swapon)"
    become: yes
    shell: swapon /u01/swap
    ignore_errors: yes
    when: ansible_swaptotal_mb < SWAP_SIZE -1
    tags:
      - swapon
      - swap
      - prereq
      
  - name: "mount swap(fstab)"
    become: yes
    mount:
      name: swap 
      src: /u01/swap
      fstype: swap
      opts: defaults
      passno: 0
      dump: 0
      state: present
    when: ansible_swaptotal_mb < SWAP_SIZE -1
    tags:
      - fstabswap
      - swap
      - prereq
      
  - name: "unzip cvuqdisk"
    local_action: shell {{ UNZIP }} /media/{{ GRID_MEDIA }} {{ CVUQDISK }}
    args:
      creates: "/tmp/{{ CVUQDISK }}"
      executable: /bin/bash
      chdir: /tmp
    run_once: true
    when: MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - preinstallpackages
      - prereq
      
  - name: "copy cvuqdisk"
    become: yes
    copy:
      src: "/tmp/{{ CVUQDISK }}"
      dest: /tmp/cvuqdisk.rpm
    when: MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - preinstallpackages
      - prereq
        
  - name: "install cvuqdisk"
    become: yes
    dnf: 
      name: /tmp/cvuqdisk.rpm
      state: present
    when: MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - preinstallpackages
      - prereq

  - name: check sysctl.conf
    become: yes
    sysctl: 
      name: "{{ item.name }}" 
      value: "{{ item.value }}" 
      state: present
      reload: yes
    with_items: 
      - { name: 'fs.aio-max-nr', value: "1048576" } 
      - { name: 'fs.file-max', value: "6815744" } 
      - { name: 'kernel.shmmax', value: "{{ (( ansible_memtotal_mb|int * 1024 * 1024 ) * 0.50 )|int}}" } 
      - { name: 'kernel.shmall', value: "{{ (( ansible_memtotal_mb|int * 1024 * 1024 ) / 4096 )|int}}" } 
      - { name: 'kernel.shmmni', value: "4096" } 
      - { name: 'kernel.sem', value: "250 32000 100 128" } 
      - { name: 'kernel.panic_on_oops', value: "1" } 
      - { name: 'net.ipv4.ip_local_port_range', value: "9000 65500" } 
      - { name: 'net.core.rmem_default', value: "262144" } 
      - { name: 'net.core.rmem_max', value: "4194304" } 
      - { name: 'net.core.wmem_default', value: "262144" } 
      - { name: 'net.core.wmem_max', value: "1048576" } 
    tags:
      - sysctl
      - prereq
