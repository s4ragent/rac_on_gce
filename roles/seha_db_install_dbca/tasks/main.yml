---
  - name: "create oradata"
    become: yes
    file:
      path: "{{ ORA_DATA }}"
      state: directory
      owner: oracle
      group: oinstall
      mode: 0755
    tags:
      - seha_create_oradirectory

  - name: "create orainventory"
    become: yes
    file:
      path: "{{ ORAINVENTORY }}"
      state: directory
      owner: oracle
      group: oinstall
      mode: 0755
    tags:
      - seha_create_oradirectory
      
  - set_fact: INSTALL_DB_OPS=""
    when: INSTALL_DB_OPS is undefined

  - name: "copy db media"
    become: yes
    become_user: oracle
    unarchive:
      src: "/media/{{ DB_MEDIA }}"
      dest: "{{ ORA_ORACLE_HOME }}"
      creates: "{{ ORA_ORACLE_HOME }}/bin"
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_copydbmedia
      
  - name: "runInstaller(db)"
    become: yes
    become_user: oracle
    shell: |
      {{ ORA_ORACLE_HOME }}/runInstaller -silent -applyRU {{ MEDIA_PATH }}/{{ GRID_PATCH_NUM }} \
      -responseFile {{ ORA_ORACLE_HOME }}/install/response/db_install.rsp -waitforcompletion {{ INSTALL_OPS }} {{ INSTALL_DB_OPS }} \
      oracle.install.option=INSTALL_DB_SWONLY \
      ORACLE_HOSTNAME={{ ansible_hostname }} \
      UNIX_GROUP_NAME=oinstall \
      INVENTORY_LOCATION={{ ORAINVENTORY }} \
      SELECTED_LANGUAGES={{ INSTALL_LANG }} \
      ORACLE_HOME={{ ORA_ORACLE_HOME }} \
      ORACLE_BASE={{ ORA_ORACLE_BASE }} \
      oracle.install.db.InstallEdition=SE2 \
      oracle.install.db.OSDBA_GROUP=dba \
      oracle.install.db.OSBACKUPDBA_GROUP=dba \
      oracle.install.db.OSDGDBA_GROUP=dba \
      oracle.install.db.OSKMDBA_GROUP=dba \
      oracle.install.db.OSRACDBA_GROUP=dba \
      SECURITY_UPDATES_VIA_MYORACLESUPPORT=false \
      DECLINE_SECURITY_UPDATES=true
    when: inventory_hostname == groups["dbserver"][0]
    register: runinstallerdb_result
    failed_when: runinstallerdb_result.rc !=0 and runinstallerdb_result.rc != 250 and runinstallerdb_result.rc != 6
    tags:
      - seha_runInstaller

  - name: "db root.sh"
    become: yes
    shell: "{{ ORA_ORACLE_HOME }}/root.sh -silent"
    when: inventory_hostname == groups["dbserver"][0]
    register: dbrootsh_result
    tags:
      - seha_runInstaller

  - debug: var=dbrootsh_result.stdout_lines
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_runInstaller

  - name: "readonly oraclehome"
    become: yes
    become_user: oracle
    shell: |
      {{ ORA_ORACLE_HOME }}/bin/roohctl -enable
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_readonly_oraclehome
      
  - name: "add node"
    become: yes
    become_user: oracle
    shell: |
      {{ ORA_ORACLE_HOME }}/addnode/addnode.sh -silent -ignorePrereqFailure CLUSTER_NEW_NODES={% for host in groups['dbserver'] %}{% if not loop.first %}{{ hostvars[host]['NODENAME'] }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %} 
    when: inventory_hostname == groups["dbserver"][0]
    register: addnode_result
    failed_when: addnode_result.rc !=0 and  runinstallerdb_result.rc != 6
    tags:
      - seha_addnode   


  - name: "dbca"
    become: yes
    become_user: oracle
    shell: |
      {{ ORA_ORACLE_HOME }}/bin/dbca -silent -createDatabase \
      -templateName {{ TEMPLATENAME }} -gdbName {{ DBNAME }} -sid {{ SIDNAME }} \
      -createAsContainerDatabase true -numberOfPDBs 1 -pdbName {{ PDBNAME }} \
      -pdbAdminPassword {{ PDBADMINPASSWORD }} -SysPassword {{ SYSPASSWORD }} -SystemPassword {{ SYSTEMPASSWORD }} \
      -emConfiguration NONE  -redoLogFileSize {{ REDOFILESIZE }} \
      -recoveryAreaDestination +{{ FRA_DISKGROUP_NAME }} \
      -storageType ASM -asmSysPassword {{ ASMSYSPASSWORD }} -diskGroupName {{ DATA_DISKGROUP_NAME }} \
      -characterSet {{ CHARSET }} -nationalCharacterSet {{ NCHAR }} -totalMemory {{ MEMORYTARGET }} \
      -databaseType {{ DATABASETYPE }} -ignorePreReqs
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_dbca
      
  - name: remove LOCAL_LISTENER
    become: yes
    become_user: oracle
    shell: |
        source ~/.bash_profile
        export ORACLE_SID=`ps -ef | grep ora_pmon_  | grep -v grep | awk -F 'pmon_' '{print $2}'`
        sqlplus 'sys/{{ SYSPASSWORD }} as sysdba' <<'EOF'
        ALTER SYSTEM RESET LOCAL_LISTENER SCOPE = BOTH;
        exit
        EOF
    args:
      chdir: "~/"
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_remove_listener
      
  - name: "add node srvctl"
    become: yes
    become_user: oracle
    shell: |
      source ~/.bash_profile
      {{ ORA_ORACLE_HOME }}/bin/srvctl modify database -db {{ DBNAME }} -node {% for host in groups['dbserver'] %}{{ hostvars[host]['NODENAME'] }}{% if not loop.last %},{% endif %}{% endfor %} 
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_add_srvctl         
      
  - name: "add service"
    become: yes
    become_user: oracle
    shell: |
      source ~/.bash_profile
      {{ ORA_ORACLE_HOME }}/bin/srvctl add service -db {{ DBNAME }} -service {{ DBNAME }}sv 
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - seha_add_service   



